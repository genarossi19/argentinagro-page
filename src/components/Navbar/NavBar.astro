---
import NavItem from "./NavBarItem.astro";
import NavbarButtons from "./NavBarButtons";

import "../../styles/global.css";

const path = Astro.url.pathname;
const pathSlipt = path.split("/").slice(1).toString();

const ClassFunction = (type: string) => {
  let classes =
    "text-black font-medium transition-all ease-in-out cursor-pointer px-4 py-2 rounded-md ";

  if (pathSlipt === type) {
    // Estilos cuando estás en la página
    classes += " bg-black/60 text-white hover:bg-logo-blue hover:text-white";
  } else {
    // Estilos cuando NO estás en la página
    classes +=
      " text-current hover:text-white px-4 py-2 rounded-md hover:bg-black/20";
  }

  return classes;
};
---

<nav id="nav-header" class="flex justify-between py-2 px-16 gap-4 items-center">
  <a class="flex items-center gap-2" href="/"
    ><img src="/logo1.png" alt="logo" class="w-[200px]" /></a
  >

  <ul class="flex gap-8 items-center">
    <NavItem newClass={ClassFunction("")} href="/">Inicio</NavItem>
    <NavItem newClass={ClassFunction("servicios")} href="/servicios"
      >Servicios</NavItem
    >
    <NavItem newClass={ClassFunction("about")} href="/about"
      >Sobre nosotros</NavItem
    >
    <NavItem newClass={ClassFunction("info")} href="/info">Informacion</NavItem>
  </ul>
  <NavbarButtons client:visible />
</nav>
<!-- intersection observer -->
<script>
  const initializeObserver = () => {
    const $nav = document.querySelector("#nav-header") as HTMLElement;

    const observerOptions = {
      root: null,
      rootMargin: "0px",
      threshold: 0.9,
    };

    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        const { isIntersecting } = entry;
        if (isIntersecting) {
          const color = entry.target.getAttribute("data-header-color");
          $nav.style.color = color!;
        }
      });
    }, observerOptions);

    const $sections = document.querySelectorAll(".landing-section");
    $sections.forEach((section) => observer.observe(section));
  };

  // Inicialización al cargar la página
  initializeObserver();

  // Re-inicializar después de cada navegación del ClientRouter
  document.addEventListener("astro:after-swap", () => {
    initializeObserver();
  });
</script>
